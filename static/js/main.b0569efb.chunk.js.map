{"version":3,"sources":["images/liocam-logo.jpg","Nav.jsx","firebase.js","axios.js","useDragAndDrop.js","NewPlan.jsx","NewProduct.jsx","useFetch.js","Plans.jsx","UpdatePlan.jsx","UpdateProduct.jsx","App.js","index.js"],"names":["Nav","className","src","logo","alt","process","REACT_APP_FIREBASE_PROJECT_ID","REACT_APP_FIREBASE_APP_ID","REACT_APP_FIREBASE_STORAGE_BUCKET","REACT_APP_FIREBASE_LOCATION_ID","REACT_APP_API_KEY","REACT_APP_FIREBASE_AUTH_DOMAIN","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","app","firebase","initializeApp","port","PORT","baseURL","axios","create","headers","route","folder","useState","updatePlan","setUpdatePlan","active","setActive","errorMessage","setErrorMessage","files","setFiles","urls","setUrls","id","uuid","plan","setPlan","badFilesClass","inactiveClass","preventDefaults","e","preventDefault","checkFilesType","dataFiles","length","imagePattern","file","type","match","alert","prev","postImage","a","filename","storageRef","storage","ref","fileRef","child","put","getDownloadURL","url","handleSubmit","Promise","all","map","imgUrls","post","images","then","res","toast","success","data","message","console","log","error","target","reset","dragenter","dataTransfer","items","dragleave","drop","handleFileChange","handleChange","name","value","filter","item","showUpdate","NewPlan","formRef","useRef","useDragAndDrop","onSubmit","htmlFor","onChange","placeholder","required","category","basicPrice","standardPrice","premiumPrice","plotWidth","plotLength","plotArea","parking","freeSpace","stories","apartments","livingRooms","rooms","toilets","kitchens","balconies","verandas","rows","description","onDragEnter","onDragLeave","onDrop","onDragOver","accept","multiple","onClick","to","NewProduct","product","productName","useFetch","setData","ddata","setdData","loader","setLoader","deleteBox","setDeletBox","useEffect","source","CancelToken","unMounted","fetchData","cancel","get","isCancel","refetchData","setDeleteItem","obj","hideDeleteBox","deleteImage","imgUrl","split","slice","fileReference","delete","handleDelete","patch","Plans","deleteRef","history","useHistory","pathname","useLocation","plansFilter","setPlansFilter","handleClickOutside","wrap","current","contains","document","addEventListener","removeEventListener","push","toLowerCase","includes","title","_id","UpdatePlan","useParams","catch","err","finally","style","display","justifyContent","gap","flexWrap","img","i","width","overflow","height","objectFit","color","textAlign","cursor","UpdateProduct","App","projects","planDelete","products","productDelete","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0569efb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/liocam-logo.b1925105.jpg\";","import React from 'react'\r\nimport logo from './images/liocam-logo.jpg';\r\n\r\nfunction Nav() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"nav-section\">\r\n                <div className=\"nav-logo-container\">\r\n                <img src={logo} alt=\"\" className=\"nav-logo\" />\r\n                </div>\r\n                <div className=\"header\">\r\n                <h1>LIOCAM ADMIN DASHBOARD</h1>\r\n                </div>\r\n                <div className=\"user-icon-cont\">\r\n                    <i className=\"fas fa-user fa-2x\"></i>\r\n                </div>\r\n            </section>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import firebase from 'firebase'\r\nimport 'firebase/storage'\r\nimport 'firebase/auth'\r\n\r\nconst {REACT_APP_FIREBASE_PROJECT_ID, REACT_APP_FIREBASE_APP_ID, REACT_APP_FIREBASE_STORAGE_BUCKET, REACT_APP_FIREBASE_LOCATION_ID, REACT_APP_API_KEY, REACT_APP_FIREBASE_AUTH_DOMAIN, REACT_APP_FIREBASE_MESSAGING_SENDER_ID} = process.env\r\n\r\nconst app = firebase.initializeApp({\r\n  \"projectId\": REACT_APP_FIREBASE_PROJECT_ID,\r\n  \"appId\": REACT_APP_FIREBASE_APP_ID,\r\n  \"storageBucket\": REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  \"locationId\": REACT_APP_FIREBASE_LOCATION_ID,\r\n  \"apiKey\": REACT_APP_API_KEY,\r\n  \"authDomain\": REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  \"messagingSenderId\": REACT_APP_FIREBASE_MESSAGING_SENDER_ID\r\n});\r\n\r\nexport default app","import axios from 'axios'\r\n\r\nconst port = process.env.PORT || 'http://localhost:5000'\r\n\r\nexport const baseURL = axios.create({\r\n    baseURL: port,\r\n    // withCredentials: true,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': '*/*',\r\n        'Origin': port\r\n    },\r\n})","import {useState} from 'react'\r\nimport app from './firebase'\r\nimport uuid from 'react-uuid'\r\nimport {baseURL} from './axios'\r\nimport { toast } from 'react-toastify'\r\n\r\nexport default function (route, folder){\r\n    const [updatePlan, setUpdatePlan] = useState(false)\r\n    const [active, setActive] = useState(false)\r\n    const [errorMessage, setErrorMessage] = useState('Drag and drop images here (max : 5)')\r\n    const [files, setFiles] = useState([])\r\n    const [urls, setUrls] = useState([])\r\n\r\n    const [plan, setPlan] = useState({id : uuid()});\r\n\r\n    const activeClass = ()=> setActive('true')\r\n    const badFilesClass = ()=> setActive('bad')\r\n    const inactiveClass = ()=> setActive('false')\r\n    const preventDefaults = (e)=> e.preventDefault()\r\n\r\n    const checkFilesType = (dataFiles)=> {\r\n        // setFiles([])\r\n\r\n        if ((files.length + dataFiles.length) > 5) {\r\n            setErrorMessage('Note more than 5 images please.')\r\n            setFiles([])\r\n            return badFilesClass()\r\n        }\r\n        const imagePattern = /image-*/\r\n        \r\n        for (const file of dataFiles) {\r\n            \r\n            if (!file.type.match(imagePattern)) {\r\n                alert('Bad files chosen. Please select only images')\r\n                break\r\n            }\r\n            inactiveClass()\r\n            setFiles(prev => (\r\n                [ ...prev, file ]\r\n            ))\r\n        }\r\n    }\r\n\r\n\r\n    const dragenter = (e) => {\r\n        preventDefaults(e)\r\n        const dataTransfer = e.dataTransfer;\r\n        const files = [...dataTransfer.items]\r\n        const imagePattern = /image-*/\r\n\r\n        if (files.length > 5) {\r\n            setErrorMessage('Note more than 5 images please.')\r\n            return badFilesClass()\r\n        }\r\n\r\n        for (const file of files) {\r\n            if (!file.type.match(imagePattern)) {\r\n                setErrorMessage('Bad file types chosen. Please add only images')\r\n                badFilesClass()\r\n                break\r\n            }\r\n            activeClass()\r\n            setErrorMessage('Drop images to upload')\r\n        }\r\n        \r\n    }\r\n\r\n    const handleChange = (e)=>{\r\n        const {name, value} = e.target\r\n        setPlan(prev => (\r\n            {\r\n                ...prev,\r\n                [name] : value\r\n            }\r\n        ));\r\n    };\r\n\r\n    const dragleave = (e) => {\r\n        preventDefaults(e)\r\n        inactiveClass()\r\n        setErrorMessage('Drag and drop images here (max : 5)')\r\n    }\r\n\r\n    const drop = (e) => {\r\n        preventDefaults(e)\r\n        inactiveClass()\r\n        const dataTransfer = e.dataTransfer;\r\n        const files = [...dataTransfer.files]\r\n        checkFilesType(files)\r\n        \r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        preventDefaults(e)\r\n        inactiveClass()\r\n        const dataFiles = [...e.target.files]\r\n\r\n        checkFilesType(dataFiles)\r\n\r\n    }\r\n\r\n    const postImage = async function(file){\r\n        const filename = uuid();\r\n        const storageRef = app.storage().ref(folder)\r\n        const fileRef = storageRef.child(filename)\r\n        await fileRef.put(file)\r\n        const url = await fileRef.getDownloadURL()\r\n        setUrls(prev => ([...prev, url]))\r\n        return url\r\n    }\r\n\r\n\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n        if (files.length === 0) {\r\n            return alert('Please add image(s)')\r\n        }\r\n\r\n        try {\r\n            const imgUrls = await Promise.all(files.map(file => (\r\n                postImage(file)\r\n            )))\r\n\r\n            await baseURL.post(`/${route}`, {\r\n                ...plan,\r\n                images: imgUrls,\r\n            }).then(res => {\r\n                toast.success(res.data.message)\r\n            })\r\n            console.log(plan);\r\n        } catch (error) {\r\n            toast.error('Failed to add item. Please try again.')\r\n            console.log(error);\r\n        }finally {\r\n            e.target.reset()\r\n            setPlan({id : uuid()})\r\n            setFiles([])\r\n            setUrls([])\r\n        }\r\n\r\n    }\r\n\r\n    const filter = (filename)=>{\r\n        setFiles(files.filter(item => item.name !== filename))\r\n    }\r\n\r\n    const showUpdate = (data)=>{\r\n        setPlan(data)\r\n        setUpdatePlan(true)\r\n    }\r\n\r\n\r\n    return {\r\n        plan, active, errorMessage, dragenter, dragleave, drop, handleFileChange, handleChange, handleSubmit, filter, updatePlan, showUpdate, setPlan, files, setFiles, urls, setUrls,\r\n    }\r\n}","import React, { useState, useRef } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport './NewPlan.css'\r\nimport useDragAndDrop from './useDragAndDrop';\r\n\r\nfunction NewPlan() {\r\n    const formRef = useRef()\r\n    const {plan, active, errorMessage, dragenter, dragleave, drop, handleFileChange, handleChange, handleSubmit, files, filter} = useDragAndDrop('plans', 'designs')\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"new-plan-container\">\r\n                <h1>Add New Plan</h1>\r\n\r\n                <form ref={formRef} onSubmit={handleSubmit} >\r\n                    <div className=\"new-plan-details\">\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"name\">Plan Name</label>\r\n                            <input type=\"text\" name=\"name\" id=\"name\" className=\"name\" value={plan.name} onChange={handleChange} placeholder=\"Enter Plan Name\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"category\">Category</label>\r\n                            <select name=\"category\" id=\"category\" className=\"category\" value={plan.category} onChange={handleChange} required >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"bungalow\">Bungalow</option>\r\n                                <option value=\"duplex\">Duplex</option>\r\n                                <option value=\"apartment\">Apartment</option>\r\n                                <option value=\"other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"basicPrice\">Basic Price</label>\r\n                            <input type=\"number\" name=\"basicPrice\" id=\"basicPrice\" className=\"basicPrice\" value={plan.basicPrice} onChange={handleChange} placeholder=\"Enter Basic Price\" required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"standardPrice\">Standard Price</label>\r\n                            <input type=\"number\" name=\"standardPrice\" id=\"standardPrice\" className=\"standardPrice\" value={plan.standardPrice} onChange={handleChange} placeholder=\"Enter Standard Price\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"premiumPrice\">Premium Price</label>\r\n                            <input type=\"number\" name=\"premiumPrice\" id=\"premiumPrice\" className=\"premiumPrice\" value={plan.premiumPrice} onChange={handleChange} placeholder=\"Enter Premium Price\" required />\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotWidth\">Plot Width</label>\r\n                            <input type=\"text\" className=\"plotWidth\" id=\"plotWidth\" name=\"plotWidth\" value={plan.plotWidth} onChange={handleChange} placeholder=\"Enter Plot Width in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotLength\">Plot Length</label>\r\n                            <input type=\"text\" className=\"plotLength\" id=\"plotLength\" name=\"plotLength\" value={plan.plotLength} onChange={handleChange} placeholder=\"Enter Plot Length in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotArea\">Plot Area</label>\r\n                            <input type=\"text\" className=\"plotArea\" id=\"plotArea\" name=\"plotArea\" value={plan.plotArea} onChange={handleChange} placeholder=\"Enter Plot Area in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"parking\">Parking</label>\r\n                            <select className=\"parking\" id=\"parking\" name=\"parking\" value={plan.parking} onChange={handleChange}>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"freeSpace\">Free Space</label>\r\n                            <input type=\"text\" className=\"freeSpace\" id=\"freeSpace\" name=\"freeSpace\" value={plan.freeSpace} onChange={handleChange} placeholder=\"Free Space\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"stories\">Stories</label>\r\n                            <input type=\"number\" className=\"stories\" id=\"stories\" name=\"stories\" value={plan.stories} onChange={handleChange} placeholder=\"Number of Stories\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"apartments\">Apartments</label>\r\n                            <input type=\"number\" className=\"apartments\" id=\"apartments\" name=\"apartments\" value={plan.apartments} onChange={handleChange} placeholder=\"Number of apartments\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"livingRooms\">Living Rooms</label>\r\n                            <input type=\"number\" className=\"livingRooms\" id=\"livingRooms\" name=\"livingRooms\" value={plan.livingRooms} onChange={handleChange} placeholder=\"Number of living rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"rooms\">Rooms</label>\r\n                            <input type=\"number\" className=\"rooms\" id=\"rooms\" name=\"rooms\" value={plan.rooms} onChange={handleChange} placeholder=\"Number of rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"toilets\">Toilets</label>\r\n                            <input type=\"number\" className=\"toilets\" id=\"toilets\" name=\"toilets\" value={plan.toilets} onChange={handleChange} placeholder=\"Number of toilet rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"kitchens\">Kitchens</label>\r\n                            <input type=\"number\" className=\"kitchens\" id=\"kitchens\" name=\"kitchens\" value={plan.kitchens} onChange={handleChange} placeholder=\"Number of kitchens\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"balconies\">Balconies</label>\r\n                            <input type=\"number\" className=\"balconies\" id=\"balconies\" name=\"balconies\" value={plan.balconies} onChange={handleChange} placeholder=\"Number of balconies\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"verandas\">Verandas</label>\r\n                            <input type=\"number\" className=\"verandas\" id=\"verandas\" name=\"verandas\" value={plan.verandas} onChange={handleChange} placeholder=\"Number of verandas\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"plan-description-cont\">\r\n                        <textarea rows='5' className=\"description\" id=\"descriptio\" name=\"description\" value={plan.description} onChange={handleChange} placeholder=\"Describe this plan here\" required />\r\n                    </div>\r\n\r\n                    <div className={active === 'true' ? \"add-image-cont active\" : active === 'bad' ? \"add-image-cont badfile\" : \"add-image-cont\"}\r\n                        onDragEnter={dragenter}\r\n                        onDragLeave={dragleave}\r\n                        onDrop={drop}\r\n                        onDragOver={dragenter}\r\n                    >\r\n                        <p className=\"add-image-text\">{errorMessage}</p>\r\n                        <span>Or</span>\r\n                        <input type=\"file\" name=\"images\" id=\"add-image\" className=\"add-image\" accept='image/jpg, image/png, image/jpeg'  multiple onChange={handleFileChange} />\r\n                        \r\n                        <label htmlFor=\"add-image\" className='browse'>Browse</label>\r\n                        <p>{files.length} Image(s) added</p>\r\n                    </div>\r\n\r\n                    <div className=\"plans-and-btns\">\r\n                        <div className=\"plan-files\">\r\n                            {\r\n                                files?.map((item) => (\r\n                                    <div className=\"file\">\r\n                                        <span>{item.name}</span>\r\n                                        <i className=\"fas fa-times\" onClick={()=>{\r\n                                            filter(item.name)\r\n                                        }}></i>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"button-cont\">\r\n                            <button className=\"btn\">\r\n                                <Link to=\"/\">Cancel</Link>\r\n                            </button>\r\n                            <button className=\"btn-sub btn\" type='submit'>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPlan\r\n","import React, { useRef } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport useDragAndDrop from './useDragAndDrop';\r\nimport './NewProduct.css';\r\n\r\nfunction NewProduct() {\r\n    const formRef = useRef(null);\r\n    const {plan:product, active, errorMessage, dragenter, dragleave, drop, handleFileChange, handleSubmit, handleChange, files, filter} = useDragAndDrop('products', 'products')\r\n\r\n    \r\n    return (\r\n        <div className=\"new-product\">\r\n            <h1>Add New Product</h1>\r\n            <form ref={formRef} onSubmit={handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"form-control-group\">\r\n                        <label htmlFor=\"productName\">Product Name</label>\r\n                        <input type=\"text\" name=\"productName\" id=\"productName\" className=\"productName\" onChange={handleChange} value={product.productName} required placeholder=\"Enter Product Name\"/>\r\n                    </div>\r\n                    <div className=\"form-control-group\">\r\n                        <textarea name=\"description\" id=\"description\" rows=\"10\" onChange={handleChange} placeholder=\"Enter Description\" value={product.description} required></textarea>\r\n                    </div>\r\n\r\n                    <div className={active === 'true' ? \"add-image-cont active\" : active === 'bad' ? \"add-image-cont badfile\" : \"add-image-cont\"}\r\n                        onDragEnter={dragenter}\r\n                        onDragLeave={dragleave}\r\n                        onDrop={drop}\r\n                        onDragOver={dragenter}\r\n                    >\r\n                        <p className=\"add-image-text\">{errorMessage}</p>\r\n                        <span>Or</span>\r\n                        <input type=\"file\" name=\"images\" id=\"add-image\" className=\"add-image\" accept='image/jpg, image/png, image/jpeg'  multiple onChange={handleFileChange} />\r\n                        \r\n                        <label htmlFor=\"add-image\" className='browse'>Browse</label>\r\n                        <p>{files.length} Image(s) Added</p>\r\n                    </div>\r\n\r\n                    <div className=\"plans-and-btns\">\r\n                        <div className=\"plan-files\">\r\n                            {\r\n                                files?.map((item) => (\r\n                                    <div className=\"file\">\r\n                                        <span>{item.name}</span>\r\n                                        <i className=\"fas fa-times\" onClick={()=>{\r\n                                            filter(item.name)\r\n                                        }}></i>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"button-cont\">\r\n                            <button className=\"btn\">\r\n                                <Link to=\"/\">Cancel</Link>\r\n                            </button>\r\n                            <button className=\"btn-sub btn\" type='submit'>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","import {useState, useEffect} from 'react'\r\nimport { toast } from 'react-toastify';\r\nimport axios from 'axios'\r\nimport {baseURL} from './axios'\r\nimport app from './firebase'\r\n\r\nfunction useFetch(url, folder) {\r\n    // const {user} = useContext(UserContext)\r\n    const [data, setData] = useState([])\r\n    const [ddata, setdData] = useState({})\r\n    const [loader, setLoader] = useState(false)\r\n    const [deleteBox, setDeletBox] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        let source = axios.CancelToken.source();\r\n        let unMounted = false;\r\n        fetchData(source, unMounted, url)\r\n\r\n        return ()=>{\r\n            unMounted = true;\r\n            source.cancel('Cancelling request')\r\n        }\r\n    }, [url])\r\n\r\n    const fetchData = async(source, unMounted, url)=>{\r\n        try {\r\n            setLoader(true)\r\n            const res = await baseURL.get(`/${url}`)\r\n            \r\n            setData(await res.data)\r\n        } catch (error) {\r\n            if (!unMounted) {\r\n                if (axios.isCancel(error)) {\r\n                console.log('Request Cancelled');\r\n            }else{\r\n                console.log('Something went wrong');\r\n            }\r\n            }\r\n        }finally{setLoader(false)}\r\n    }\r\n\r\n    const refetchData = async()=>{\r\n        await baseURL.get(`/${url}`).then(async(res)=>{\r\n            const data = await res.data\r\n            setData(data)\r\n        })\r\n    }\r\n\r\n    const setDeleteItem = (obj) =>{\r\n        setdData(obj)\r\n        setDeletBox(true)\r\n    }\r\n\r\n    const hideDeleteBox = ()=>{\r\n        setDeleteItem({})\r\n        setDeletBox(false)\r\n    }\r\n\r\n    const deleteImage = async(imgUrl)=>{\r\n        const filename = imgUrl.split('%')[1].split('?')[0].slice(2);\r\n        const fileReference = app.storage().ref(folder)\r\n        await fileReference.child(filename).delete()\r\n    }\r\n\r\n    const handleDelete = async()=>{\r\n        setLoader(true)\r\n        try {\r\n            const res = await baseURL.patch(`/${url}`, ddata)\r\n            const data = await res.data\r\n            toast.success(data.message)\r\n            refetchData()\r\n\r\n            await Promise.all(ddata.images?.map(item => {\r\n                deleteImage(item)\r\n            }))\r\n        \r\n        } catch (error) {\r\n            toast.error('Failed to delete item. Please try again')\r\n        }finally{\r\n            setLoader(false)\r\n            hideDeleteBox()\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return {\r\n        data, loader, refetchData, handleDelete, setDeleteItem, deleteBox, hideDeleteBox\r\n    }\r\n}\r\n\r\nexport default useFetch\r\n","import React, {useState, useRef, useEffect} from 'react'\r\nimport {Link, useHistory, useLocation} from 'react-router-dom'\r\nimport { ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport useFetch from './useFetch'\r\n\r\n\r\nfunction Plans({data, route}) {\r\n    const deleteRef = useRef()\r\n    const history = useHistory()\r\n    const {pathname} = useLocation()\r\n\r\n    const [plansFilter, setPlansFilter] = useState('')\r\n\r\n    const {handleDelete, setDeleteItem, deleteBox, hideDeleteBox} = useFetch(pathname === '/' ? 'plans' : 'products', pathname === '/' ? 'designs' : 'products')\r\n\r\n    const handleChange = (e) => {\r\n        setPlansFilter(e.target.value)\r\n    }\r\n    \r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return ()=>{\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        }\r\n    }, [])\r\n\r\n    function handleClickOutside(e){\r\n        const {current : wrap} = deleteRef;\r\n        if(wrap && !wrap.contains(e.target)){\r\n            hideDeleteBox()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <section className=\"projects-section\">\r\n                <div className=\"filter-options\">\r\n                    <div className=\"filters\">\r\n                        <span className={pathname === '/' ? 'filter-option active' : 'filter-option not-active'} onClick={()=>{\r\n                            setPlansFilter('')\r\n                            history.push('/')\r\n                        }}>Plans</span>\r\n                        <span className={pathname !== '/' ? 'filter-option active' : 'filter-option not-active'} onClick={()=>{\r\n                            setPlansFilter('')\r\n                            history.push('/products')\r\n                        }}>Products</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"options-container\">\r\n                        <Link to='/new-plan'>\r\n                            <input type=\"button\" value=\"Add New Plan\" className=\"btn addPlan\" />\r\n                        </Link>\r\n                        <Link to=\"/new-product\"><input type=\"button\" value=\"Add Product\" className=\"btn addProduct\" /></Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"filterations\">\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"filter-input\">{\r\n                        pathname === '/' ? 'Filter by Category' : 'Filter Products'\r\n                    }</label>\r\n                    {\r\n                        pathname === '/' ?\r\n                        <select type=\"text\" name=\"filter\" value={plansFilter} onChange={handleChange} id=\"filter-input\" className=\"filter-input\" >\r\n                            <option value=\"\" className='select-option'>Select</option>\r\n                            <option value=\"bungalow\">Bungalow</option>\r\n                            <option value=\"duplex\">Duplex</option>\r\n                            <option value=\"apartment\">Apartments</option>\r\n                            <option value=\"other\">Other Designs</option>\r\n                        </select> :\r\n                        <input type=\"text\" name=\"product-filter\" value={plansFilter} onChange={handleChange} id=\"filter-input\" className=\"filter-input\" />\r\n                    }\r\n                </div>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"projects-display-section\">\r\n                {\r\n                data?.filter(item =>{\r\n                    if(!plansFilter || plansFilter === ''){\r\n                        return true\r\n                    }\r\n                    if(item.category?.toLowerCase().includes(plansFilter?.toLowerCase()) || item.title?.toLowerCase().includes(plansFilter?.toLowerCase()) || item.name?.toLowerCase().includes(plansFilter?.toLowerCase())){\r\n                        return true\r\n                    }\r\n                }).map(item => (\r\n                    <div className=\"project-item\" key={item._id}>\r\n                    <div className=\"item-image-container\" onClick={()=>{\r\n                        history.push(`/${route}/${item.id}/edit`)\r\n                    }}>\r\n                        <img src={item.images[0]} alt=\"Project Item\" className=\"item-image\" />\r\n                    </div>\r\n                    <div className=\"text-cont\">\r\n                        <p onClick={()=>{\r\n                        history.push(`/${route}/${item.id}/edit`)\r\n                    }}>{item.productName?.slice(0, 25) || item.name?.slice(0,25)}...</p>\r\n                        <i className=\"fas fa-trash\" onClick={()=>{\r\n                            setDeleteItem(item)\r\n                        }}></i>\r\n                    </div>\r\n                    </div>\r\n                ))\r\n                }\r\n            </section>\r\n\r\n            {\r\n                deleteBox && <div className='delete-box-cont'>\r\n                    <div className='delete-box' ref={deleteRef}>\r\n                    <p>Are you sure you want to delete this item?</p>\r\n                    <div className='button-cont'>\r\n                        <button className='btn' onClick={hideDeleteBox}>No.Cancel</button>\r\n                        <button className='btn btn-delete' onClick={handleDelete}>Yes, Delete</button>\r\n                    </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            }\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Plans\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport uuid from 'react-uuid'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport app from './firebase'\r\nimport {baseURL} from './axios'\r\nimport './NewPlan.css'\r\nimport useDragAndDrop from './useDragAndDrop';\r\nimport useFetch from './useFetch';\r\n\r\nfunction UpdatePlan() {\r\n    const formRef = useRef(null)\r\n    const {plan, active, errorMessage, dragenter, dragleave, drop, handleFileChange, handleChange, files, setFiles, urls, setUrls,  filter, setPlan} = useDragAndDrop('add-plan', 'designs')\r\n    const {data} = useFetch('plans')\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        const items = data?.filter(item => item.id === id)\r\n        setPlan(items[0])\r\n        \r\n    }, [data])\r\n\r\n    const postImage = async function(file){\r\n        const filename = uuid();\r\n        const storageRef = app.storage().ref('designs')\r\n        const fileRef = storageRef.child(filename)\r\n        await fileRef.put(file)\r\n        const url = await fileRef.getDownloadURL()\r\n        setUrls(prev => ([...prev, url]))\r\n        return url\r\n    }\r\n \r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault()\r\n\r\n        if (plan.images.length > 0) {\r\n            await baseURL.put('plans', {\r\n                    ...plan,\r\n                }).then(res => {\r\n                    toast.success(res.data.message);\r\n                }).catch(err => {\r\n                    toast.error('Failed to update item. Please try again later.')\r\n                }).finally(()=>{\r\n                    // setLoader(false)\r\n                    setPlan({})\r\n                    setFiles([])\r\n                    setUrls([])\r\n                })\r\n        }else{\r\n            \r\n            if (files.length === 0) {\r\n                return alert('Please add image(s)')\r\n            }\r\n\r\n            try {\r\n                const imgUrls = await Promise.all(files.map(file => (\r\n                    postImage(file)\r\n                )))\r\n\r\n                await baseURL.put('plans', {\r\n                    ...plan,\r\n                    images: imgUrls,\r\n                }).then(res => {\r\n                    toast.success(res.data.message);\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n                toast.error('Failed to update item. Please try again later.');\r\n            }finally {\r\n                setPlan({})\r\n                setFiles([])\r\n                setUrls([])\r\n                // setLoader(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"new-plan-container\">\r\n                <h1>View and/or Edit Plan</h1>\r\n\r\n                <form ref={formRef} onSubmit={handleSubmit}>\r\n                    <div className=\"new-plan-details\">\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"name\">Plan Name</label>\r\n                            <input type=\"text\" name=\"name\" id=\"name\" className=\"name\" value={plan?.name} onChange={handleChange} placeholder=\"Enter Plan Name\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"category\">Category</label>\r\n                            <select name=\"category\" id=\"category\" className=\"category\" value={plan?.category} onChange={handleChange} required >\r\n                                <option value=\"\">Select</option>\r\n                                <option value=\"bungalow\">Bungalow</option>\r\n                                <option value=\"duplex\">Duplex</option>\r\n                                <option value=\"apartment\">Apartment</option>\r\n                                <option value=\"other\">Other</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"basicPrice\">Basic Price</label>\r\n                            <input type=\"number\" name=\"basicPrice\" id=\"basicPrice\" className=\"basicPrice\" value={plan?.basicPrice} onChange={handleChange} placeholder=\"Enter Basic Price\" required/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"standardPrice\">Standard Price</label>\r\n                            <input type=\"number\" name=\"standardPrice\" id=\"standardPrice\" className=\"standardPrice\" value={plan?.standardPrice} onChange={handleChange} placeholder=\"Enter Standard Price\" required />\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"premiumPrice\">Premium Price</label>\r\n                            <input type=\"number\" name=\"premiumPrice\" id=\"premiumPrice\" className=\"premiumPrice\" value={plan?.premiumPrice} onChange={handleChange} placeholder=\"Enter Premium Price\" required />\r\n                        </div>\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotWidth\">Plot Width</label>\r\n                            <input type=\"text\" className=\"plotWidth\" id=\"plotWidth\" name=\"plotWidth\" value={plan?.plotWidth} onChange={handleChange} placeholder=\"Enter Plot Width in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotLength\">Plot Length</label>\r\n                            <input type=\"text\" className=\"plotLength\" id=\"plotLength\" name=\"plotLength\" value={plan?.plotLength} onChange={handleChange} placeholder=\"Enter Plot Length in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"plotArea\">Plot Area</label>\r\n                            <input type=\"text\" className=\"plotArea\" id=\"plotArea\" name=\"plotArea\" value={plan?.plotArea} onChange={handleChange} placeholder=\"Enter Plot Area in metres (m)\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"parking\">Parking</label>\r\n                            <select className=\"parking\" id=\"parking\" name=\"parking\" value={plan?.parking} onChange={handleChange}>\r\n                                <option value=\"yes\">Yes</option>\r\n                                <option value=\"no\">No</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"freeSpace\">Free Space</label>\r\n                            <input type=\"text\" className=\"freeSpace\" id=\"freeSpace\" name=\"freeSpace\" value={plan?.freeSpace} onChange={handleChange} placeholder=\"Free Space\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"stories\">Stories</label>\r\n                            <input type=\"number\" className=\"stories\" id=\"stories\" name=\"stories\" value={plan?.stories} onChange={handleChange} placeholder=\"Number of Stories\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"apartments\">Apartments</label>\r\n                            <input type=\"number\" className=\"apartments\" id=\"apartments\" name=\"apartments\" value={plan?.apartments} onChange={handleChange} placeholder=\"Number of apartments\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"livingRooms\">Living Rooms</label>\r\n                            <input type=\"number\" className=\"livingRooms\" id=\"livingRooms\" name=\"livingRooms\" value={plan?.livingRooms} onChange={handleChange} placeholder=\"Number of living rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"rooms\">Rooms</label>\r\n                            <input type=\"number\" className=\"rooms\" id=\"rooms\" name=\"rooms\" value={plan?.rooms} onChange={handleChange} placeholder=\"Number of rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"toilets\">Toilets</label>\r\n                            <input type=\"number\" className=\"toilets\" id=\"toilets\" name=\"toilets\" value={plan?.toilets} onChange={handleChange} placeholder=\"Number of toilet rooms\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"kitchens\">Kitchens</label>\r\n                            <input type=\"number\" className=\"kitchens\" id=\"kitchens\" name=\"kitchens\" value={plan?.kitchens} onChange={handleChange} placeholder=\"Number of kitchens\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"balconies\">Balconies</label>\r\n                            <input type=\"number\" className=\"balconies\" id=\"balconies\" name=\"balconies\" value={plan?.balconies} onChange={handleChange} placeholder=\"Number of balconies\"/>\r\n                        </div>\r\n\r\n                        <div className=\"form-control\">\r\n                            <label htmlFor=\"verandas\">Verandas</label>\r\n                            <input type=\"number\" className=\"verandas\" id=\"verandas\" name=\"verandas\" value={plan?.verandas} onChange={handleChange} placeholder=\"Number of verandas\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"plan-description-cont\">\r\n                        <textarea rows='5' className=\"description\" id=\"descriptio\" name=\"description\" value={plan?.description} onChange={handleChange} placeholder=\"Describe this plan here\" required />\r\n                    </div>\r\n\r\n                    {\r\n                        plan?.images?.length > 0 ?\r\n                        <div>\r\n                            <div style={{\r\n                            display: 'flex',\r\n                            justifyContent : 'center',\r\n                            gap : '1rem',\r\n                            flexWrap: 'wrap',\r\n                        }}>\r\n                                {\r\n                                    plan?.images?.map((img, i) => (\r\n                                        <div className=\"update-img-cont\" key={i} style={{width: '10rem',  overflow: 'hidden', height:'10rem'}}>\r\n                                            <img src={img} alt='uploaded image' style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                objectFit:'cover'\r\n                                            }}/>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <p style={{color: 'var(--main-background)', textAlign:'center', cursor: 'pointer'}} onClick={()=>{setPlan(prev => (\r\n                                {\r\n                                    ...prev,\r\n                                    images : []\r\n                                }\r\n                            ))}}>Remove All Images</p>\r\n                        </div> :  \r\n                        <div className={active === 'true' ? \"add-image-cont active\" : active === 'bad' ? \"add-image-cont badfile\" : \"add-image-cont\"}\r\n                            onDragEnter={dragenter}\r\n                            onDragLeave={dragleave}\r\n                            onDrop={drop}\r\n                            onDragOver={dragenter}\r\n                        >\r\n                            <p className=\"add-image-text\">{errorMessage}</p>\r\n                            <span>Or</span>\r\n                            <input type=\"file\" name=\"images\" id=\"add-image\" className=\"add-image\" accept='image/jpg, image/png, image/jpeg'  multiple onChange={handleFileChange} />\r\n                            \r\n                            <label htmlFor=\"add-image\" className='browse'>Browse</label>\r\n                            <p>{files.length} Image(s) added</p>\r\n                        </div>\r\n                    }\r\n\r\n                    \r\n\r\n                    <div className=\"plans-and-btns\">\r\n                        <div className=\"plan-files\">\r\n                            {\r\n                                files?.map((item) => (\r\n                                    <div className=\"file\">\r\n                                        <span>{item.name}</span>\r\n                                        <i className=\"fas fa-times\" onClick={()=>{\r\n                                            filter(item.name)\r\n                                        }}></i>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"button-cont\">\r\n                            <button className=\"btn\">\r\n                                <Link to=\"/products\">Cancel</Link>\r\n                            </button>\r\n                            <button className=\"btn-sub btn\" type='submit'>\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdatePlan\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport uuid from 'react-uuid'\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport app from './firebase'\r\nimport {baseURL} from './axios'\r\nimport './NewPlan.css'\r\nimport useDragAndDrop from './useDragAndDrop';\r\nimport useFetch from './useFetch';\r\n\r\n\r\nfunction UpdateProduct() {\r\n    const formRef = useRef(null)\r\n    const {plan : product, active, errorMessage, dragenter, dragleave, drop, handleFileChange, handleChange, files, setFiles, urls, setUrls,  filter, setPlan} = useDragAndDrop('products', 'products')\r\n\r\n    const {data} = useFetch('products', 'products')\r\n    const {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        const items = data?.filter(item => item.id === id)\r\n        setPlan(items[0])\r\n        \r\n    }, [data])\r\n\r\n    const postImage = async function(file){\r\n        const filename = uuid();\r\n        const storageRef = app.storage().ref('products')\r\n        const fileRef = storageRef.child(filename)\r\n        await fileRef.put(file)\r\n        const url = await fileRef.getDownloadURL()\r\n        setUrls(prev => ([...prev, url]))\r\n        return url\r\n    }\r\n \r\n    const handleSubmit = async(e)=>{\r\n        e.preventDefault()\r\n\r\n        if (product.images.length > 0) {\r\n            await baseURL.put('products', {\r\n                    ...product,\r\n                }).then(res => {\r\n                    toast.success(res.data.message)\r\n                })\r\n        }else{\r\n            \r\n            if (files.length === 0) {\r\n                return alert('Please add image(s)')\r\n            }\r\n\r\n            try {\r\n                const imgUrls = await Promise.all(files.map(file => (\r\n                    postImage(file)\r\n                )))\r\n\r\n                await baseURL.put('products', {\r\n                    ...product,\r\n                    images: imgUrls,\r\n                }).then(res => {\r\n                    toast.success(res.data.message);\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }finally {\r\n                setPlan({})\r\n                setFiles([])\r\n                setUrls([])\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"new-product\">\r\n            <h1>View and/or update Product</h1>\r\n            <form ref={formRef} onSubmit={handleSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"form-control-group\">\r\n                        <label htmlFor=\"productName\">Product Name</label>\r\n                        <input type=\"text\" name=\"productName\" id=\"productName\" className=\"productName\" onChange={handleChange} value={product?.productName} required placeholder=\"Enter Product Name\"/>\r\n                    </div>\r\n                    <div className=\"form-control-group\">\r\n                        <textarea name=\"description\" id=\"description\" rows=\"10\" onChange={handleChange} placeholder=\"Enter Description\" value={product?.description} required></textarea>\r\n                    </div>\r\n\r\n                    {\r\n                        product?.images?.length > 0 ?\r\n                        <div>\r\n                            <div style={{\r\n                            display: 'flex',\r\n                            justifyContent : 'center',\r\n                            gap : '1rem',\r\n                            flexWrap: 'wrap',\r\n                        }}>\r\n                                {\r\n                                    product?.images?.map((img, i) => (\r\n                                        <div className=\"update-img-cont\" key={i} style={{width: '10rem',  overflow: 'hidden', height:'10rem'}}>\r\n                                            <img src={img} alt='uploaded image' style={{\r\n                                                width: '100%',\r\n                                                height: '100%',\r\n                                                objectFit:'cover'\r\n                                            }}/>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <p style={{color: 'var(--main-background)', textAlign:'center', cursor: 'pointer'}} onClick={()=>{setPlan(prev => (\r\n                                {\r\n                                    ...prev,\r\n                                    images : []\r\n                                }\r\n                            ))}}>Remove All Images</p>\r\n                        </div> :\r\n                        <div className={active === 'true' ? \"add-image-cont active\" : active === 'bad' ? \"add-image-cont badfile\" : \"add-image-cont\"}\r\n                            onDragEnter={dragenter}\r\n                            onDragLeave={dragleave}\r\n                            onDrop={drop}\r\n                            onDragOver={dragenter}\r\n                        >\r\n                            <p className=\"add-image-text\">{errorMessage}</p>\r\n                            <span>Or</span>\r\n                            <input type=\"file\" name=\"images\" id=\"add-image\" className=\"add-image\" accept='image/jpg, image/png, image/jpeg'  multiple onChange={handleFileChange} />\r\n                            \r\n                            <label htmlFor=\"add-image\" className='browse'>Browse</label>\r\n                            <p>{files.length} Image(s) Added</p>\r\n                        </div>\r\n                    }\r\n\r\n                    \r\n\r\n                    <div className=\"plans-and-btns\">\r\n                        <div className=\"plan-files\">\r\n                            {\r\n                                files?.map((item) => (\r\n                                    <div className=\"file\">\r\n                                        <span>{item.name}</span>\r\n                                        <i className=\"fas fa-times\" onClick={()=>{\r\n                                            filter(item.name)\r\n                                        }}></i>\r\n                                    </div>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                        <div className=\"button-cont\">\r\n                            <button className=\"btn\">\r\n                                <Link to=\"/\">Cancel</Link>\r\n                            </button>\r\n                            <button className=\"btn-sub btn\" type='submit'>\r\n                                Update\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n            <ToastContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nimport Nav from './Nav';\nimport NewPlan from './NewPlan';\nimport NewProduct from './NewProduct';\nimport Plans from './Plans';\nimport useFetch from './useFetch';\nimport {products, projects} from './samplesToDelete/grid-data'\nimport UpdatePlan from './UpdatePlan';\nimport UpdateProduct from './UpdateProduct';\nimport { baseURL } from './axios';\n\nfunction App() {\n  const {data:projects, handleDelete:planDelete} = useFetch('plans')\n  const {data:products, handleDelete:productDelete} = useFetch('products')\n\n  // const planDelete = async()=>{\n  //   const res = await baseURL.delete('plans', {ddata})\n  //   const data = await res.data\n  //   console.log(data);\n  // }\n\n  return (\n    <div className=\"App\">\n    <Router>\n      <Nav/>\n\n      \n        <Switch>\n          <Route path=\"/\" exact>\n            <Plans data={projects} handleDelete={planDelete} route=\"designs\"/>\n          </Route>\n\n          <Route path=\"/designs/:id/edit\" exact>\n            <UpdatePlan data={projects} route=\"designs\"/>\n          </Route>\n\n          <Route path=\"/products\" exact>\n            <Plans data={products} handleDelete={productDelete} route=\"products\"/>\n          </Route>\n\n          <Route path=\"/new-plan\" exact>\n            <NewPlan/>\n          </Route>\n\n          <Route path=\"/new-product\" exact>\n            <NewProduct/>\n          </Route>\n\n          <Route path=\"/products/:id/edit\" exact>\n            <UpdateProduct/>\n          </Route>\n          \n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}